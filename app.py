import os
import json
import logging
from flask import Flask, request
import requests
from dotenv import load_dotenv

load_dotenv()

app = Flask(__name__)
logging.basicConfig(level=logging.INFO)

VK_CONFIRMATION = os.getenv("VK_CONFIRMATION")
FRONTPAD_SECRET = os.getenv("FRONTPAD_SECRET")

# –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π SKU ‚Üí –ê—Ä—Ç–∏–∫—É–ª
sku_to_article = {f"{i:03d}": f"{i:03d}" for i in range(1, 182)}

@app.route("/", methods=["POST"])
def vk_callback():
    data = request.json
    logging.info(f"üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –æ—Ç –í–ö: {data}")

    if data.get("type") == "confirmation":
        return VK_CONFIRMATION

    if data.get("type") in ["market_order_new", "market_order_edit"]:
        order_data = data.get("object", {})
        customer = order_data.get("customer", {})
        name = f"{customer.get('first_name', '')} {customer.get('last_name', '')}".strip()
        phone = customer.get("phone", "")
        address_data = order_data.get("delivery", {}).get("address", "–ß–µ–ª—è–±–∏–Ω—Å–∫")
        comment = order_data.get("comment", "–ó–∞–∫–∞–∑ –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ")

        items = order_data.get("items", [])
        logging.info(f"üì¶ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ: {items}")

        products_list = []
        for item in items:
            sku = item.get("sku")
            quantity = item.get("quantity", 1)
            if not sku:
                logging.warning(f"‚ö†Ô∏è –£ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç SKU: {item}")
                continue
            article = sku_to_article.get(sku)
            if article:
                products_list.append({"article": article, "quantity": quantity})
            else:
                logging.warning(f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –∞—Ä—Ç–∏–∫—É–ª –¥–ª—è SKU: {sku}")

        if not products_list:
            logging.warning("‚ö†Ô∏è –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–∫–∞–∑.")
            return "ok"

        payload = {
            "secret": FRONTPAD_SECRET,
            "action": "new_order",
            "phone": phone,
            "name": name or "–ö–ª–∏–µ–Ω—Ç –∏–∑ –í–ö",
            "delivery_address": address_data,
            "comment": comment,
            "products": json.dumps(products_list)  # —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É!
        }

        logging.info(f"üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ FrontPad: {payload}")

        try:
            response = requests.post("https://app.frontpad.ru/api/index.php", json=payload)
            response_data = response.json()
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≤ FrontPad: {e}")
            return "ok"

        logging.info(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç FrontPad: {response_data}")

        if not response_data:
            logging.error("‚ùå –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç FrontPad")
        elif response_data.get("result") != "success":
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç FrontPad: {response_data.get('error')}")

    return "ok"
