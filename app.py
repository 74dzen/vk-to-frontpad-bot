from flask import Flask, request
import requests
import os
import json

app = Flask(__name__)

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
VK_CONFIRMATION_TOKEN = '3a6a509a'

# –ö–ª—é—á–∏ –æ—Ç FrontPad
FRONTPAD_API_KEY = os.getenv("FRONTPAD_API_KEY")
FRONTPAD_SECRET = os.getenv("FRONTPAD_SECRET")

@app.route("/", methods=["POST"])
def handle_vk_event():
    data = request.get_json()
    if not data:
        print("üî¥ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–ø—Ä–æ—Å–µ")
        return "no data"

    event_type = data.get("type")
    print(f"üì• –ü–æ–ª—É—á–µ–Ω event: {event_type}")

    if event_type == "confirmation":
        return VK_CONFIRMATION_TOKEN

    elif event_type == "market_order_new":
        try:
            order = data["object"]
            recipient = order["recipient"]
            phone = recipient.get("phone", "")
            name = recipient.get("name", "")
            comment = order.get("comment", "")
            address = order["delivery"].get("address", "")
            order_items = order["preview_order_items"]

            print(f"üõí –ó–∞–∫–∞–∑ –æ—Ç {name} ({phone}), –∞–¥—Ä–µ—Å: {address}")
            print(f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}")
            print(f"üì¶ –¢–æ–≤–∞—Ä—ã: {json.dumps(order_items, ensure_ascii=False)}")

            payload = {
                "request": "add_order",
                "key": FRONTPAD_API_KEY,
                "secret": FRONTPAD_SECRET,
                "phone": phone,
                "name": name,
                "address": address,
                "comment": comment,
                "source": "VK"
            }

            added_products = 0
            for idx, item in enumerate(order_items):
                sku = item.get("item", {}).get("sku")
                quantity = item.get("quantity", 1)

                if sku:
                    payload[f"product[{added_products}]"] = sku
                    payload[f"count[{added_products}]"] = quantity
                    added_products += 1
                else:
                    print("‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω —Ç–æ–≤–∞—Ä –±–µ–∑ –∞—Ä—Ç–∏–∫–ª–∞:", item)

            print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ FrontPad: {payload}")
            response = requests.post("https://app.frontpad.ru/api/index.php", data=payload)
            print("üü¢ –û—Ç–≤–µ—Ç –æ—Ç FrontPad:", response.text)
            return "ok"

        except Exception as e:
            print("üî¥ –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞:", str(e))
            return "error"

    else:
        print("‚ö†Ô∏è –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è:", event_type)

    return "unsupported"

@app.route("/", methods=["GET"])
def index():
    return "VK-Fronpad connector is working!"
