import os
import json
import logging
import requests
from flask import Flask, request
from dotenv import load_dotenv

load_dotenv()

app = Flask(__name__)
logging.basicConfig(level=logging.INFO)

VK_CONFIRMATION = os.getenv("VK_CONFIRMATION")
VK_SECRET = os.getenv("VK_SECRET")
FRONTPAD_SECRET = os.getenv("FRONTPAD_SECRET")

ARTICLES = {f"{i:03}": f"{i:03}" for i in range(1, 182)}  # –æ—Ç "001" –¥–æ "181"

@app.route("/", methods=["POST"])
def vk_callback():
    data = request.get_json(force=True)
    logging.info(f"üì• –í–µ—Å—å JSON –æ—Ç –í–ö:\n{json.dumps(data, ensure_ascii=False, indent=2)}")

    if data.get("type") == "confirmation":
        return VK_CONFIRMATION

    if data.get("secret") != VK_SECRET:
        logging.warning("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–µ–∫—Ä–µ—Ç –æ—Ç –í–ö")
        return "not ok"

    if data.get("type") == "market_order_new":
        order = data.get("object", {})
        customer = order.get("recipient", {})
        items = order.get("preview_order_items", [])

        logging.info(f"üßæ –¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ:\n{json.dumps(items, ensure_ascii=False, indent=2)}")

        products = []
        for item in items:
            sku = item.get("sku")
            if not sku:
                sku = item.get("item", {}).get("sku")
            quantity = item.get("quantity", 1)
            article = ARTICLES.get(sku)
            if article:
                products.append({"article": article, "quantity": quantity})
            else:
                logging.warning(f"‚ùå SKU {sku} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ –∞—Ä—Ç–∏–∫—É–ª–æ–≤!")

        if not products:
            logging.warning("‚ö†Ô∏è –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–∫–∞–∑.")
            return "ok"

        phone = customer.get("phone", "")
        name = customer.get("name", "").strip()
        address = order.get("delivery", {}).get("address", "–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω")
        comment = order.get("comment", "")

        payload = {
            "secret": FRONTPAD_SECRET,
            "action": "new_order",
            "phone": phone,
            "name": name,
            "delivery_address": address,
            "comment": comment,
            "products": json.dumps(products, ensure_ascii=False)
        }

        logging.info(f"üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ FrontPad: {payload}")

        try:
            response = requests.post("https://app.frontpad.ru/api/index.php", data=payload)
            response_data = response.json()
            logging.info(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç FrontPad: {response_data}")

            if not response_data:
                logging.error("‚ùå –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç FrontPad (null)")
            elif response_data.get("result") != "success":
                logging.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç FrontPad: {response_data.get('error')}")
        except Exception as e:
            logging.exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≤ FrontPad: {e}")

        return "ok"

    return "ok"
