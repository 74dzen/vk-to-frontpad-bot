from flask import Flask, request
import requests
import os
import json

app = Flask(__name__)

# üîê –î–∞–Ω–Ω—ã–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
CONFIRMATION_TOKEN = 'f4256a8f'
VK_SECRET = os.getenv("VK_SECRET")
FRONTPAD_SECRET = os.getenv("FRONTPAD_SECRET")

@app.route('/', methods=['POST'])
def vk_callback():
    data = request.get_json()
    print("üü° –í—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å –æ—Ç VK:\n", json.dumps(data, ensure_ascii=False, indent=2))

    # üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–∞
    if 'secret' in data and data['secret'] != VK_SECRET:
        print("‚õî –ù–µ–≤–µ—Ä–Ω—ã–π —Å–µ–∫—Ä–µ—Ç!")
        return 'access denied', 403

    # ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
    if data['type'] == 'confirmation':
        print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞")
        return CONFIRMATION_TOKEN

    # üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –∏–∑ –º–∞—Ä–∫–µ—Ç–∞
    elif data['type'] == 'market_order_new':
        try:
            order = data['object']
            phone = order.get('phone', '79999999999')
            name = order.get('user_name', '–ö–ª–∏–µ–Ω—Ç VK')
            items = order.get('items', [])

            # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤
            products = {}
            quantities = {}

            for idx, item in enumerate(items):
                products[f'product[{idx}]'] = item['item_id']
                quantities[f'product_kol[{idx}]'] = item['quantity']

            payload = {
                'secret': FRONTPAD_SECRET,
                'phone': phone,
                'name': name,
                'descr': f'–ó–∞–∫–∞–∑ –∏–∑ VK, ID –∑–∞–∫–∞–∑–∞ {order.get("id")}'
            }
            payload.update(products)
            payload.update(quantities)

            print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ FrontPad:\n", payload)
            response = requests.post(
                'https://app.frontpad.ru/api/index.php?new_order',
                data=payload
            )
            print("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç FrontPad:", response.text)
            return 'ok'

        except Exception as e:
            print("üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞:", str(e))
            return 'error', 500

    # üü† –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞
    print("‚ö†Ô∏è –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–∏–ø:", data['type'])
    return 'unsupported'

