import os
import json
import logging
import requests
from flask import Flask, request
from dotenv import load_dotenv

load_dotenv()

app = Flask(__name__)
logging.basicConfig(level=logging.INFO)

FRONTPAD_SECRET = os.getenv("FRONTPAD_SECRET")

# –¢–∞–±–ª–∏—Ü–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è SKU ‚Üí –∞—Ä—Ç–∏–∫—É–ª–æ–≤
sku_to_article = {f"{i:03}": f"{i:03}" for i in range(1, 182)}

@app.route("/", methods=["POST"])
def vk_callback():
    data = request.get_json()
    logging.info(f"üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç –í–ö: {data}")

    if data.get("type") == "confirmation":
        return os.getenv("VK_CONFIRMATION_CODE", "")

    if data.get("type") != "market_order_new":
        logging.info("üîï –ù–µ–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return "ok"

    order = data["object"]
    buyer = order.get("buyer", {})
    delivery = order.get("delivery_address", {})

    # –ö–æ–Ω—Ç–∞–∫—Ç—ã
    phone = buyer.get("phone", "")
    name = f"{buyer.get('first_name', '')} {buyer.get('last_name', '')}".strip()

    # –ê–¥—Ä–µ—Å
    street = delivery.get("street", "")
    city = delivery.get("city", "")
    delivery_address = f"{city}, {street}".strip(", ")

    # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    note = order.get("comment", "") or "–ó–∞–∫–∞–∑ –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"

    # –¢–æ–≤–∞—Ä—ã
    items = order.get("items", [])
    products = []

    for item in items:
        sku = item.get("sku", "").strip()
        quantity = int(item.get("quantity", 1))
        article = sku_to_article.get(sku)

        if article:
            products.append({"article": article, "quantity": quantity})
        else:
            logging.warning(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π SKU: {sku} ‚Äî —Ç–æ–≤–∞—Ä –ø—Ä–æ–ø—É—â–µ–Ω")

    if not products:
        logging.warning("‚ö†Ô∏è –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–∫–∞–∑.")
        return "ok"

    payload = {
        "secret": FRONTPAD_SECRET,
        "action": "new_order",
        "phone": phone,
        "name": name,
        "delivery_address": delivery_address,
        "comment": note,
        "products": json.dumps(products, ensure_ascii=False),
    }

    logging.info(f"üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ FrontPad: {payload}")
    try:
        response = requests.post("https://app.frontpad.ru/api/index.php", data=payload, timeout=10)
        logging.info(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç FrontPad: {response.text}")
        response_data = response.json()

        if response_data.get("result") != "success":
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç FrontPad: {response_data.get('error')}")
    except Exception as e:
        logging.exception(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞ –≤ FrontPad: {e}")

    return "ok"

if __name__ == "__main__":
    app.run(debug=True)
